version: "3.4"
services:
  router:
    image: electronuserland/build-server-router
    hostname: "{{.Node.ID}}-{{.Service.Name}}"
    deploy: &DEPLOY
      # docker swarm shows error if some other container has `mode: host` Swarm should handle this situation, but as workaround for now, just use dnsrr
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.labels.admin == true
    environment:
      - REDIS_ENDPOINT
      - DEBUG
    logging: &LOGGING
      driver: json-file
      options:
        max-size: "4m"
        max-file: "2"
    secrets:
      - source: redis.v1
        target: /run/secrets/redis
    volumes:
      - socket:/socket

  router-nginx:
    image: develar/nginx-pushstream:latest
    hostname: "{{.Node.ID}}-{{.Service.Name}}"
    ports:
      - target: 443
        # will be replaced to 443 for production by script due to https://github.com/moby/moby/issues/35532#issuecomment-346753307
        published: 8444
        mode: host
    configs:
      - source: router-nginx.conf.v2
        target: /etc/nginx/nginx.conf
    secrets:
      - source: builder.crt.v2
        target: bundle.crt
      - source: builder.key.v1
        target: node.key
    deploy:
      <<: *DEPLOY
    logging:
      <<: *LOGGING
    volumes:
      - socket:/socket

volumes:
  # no need to use tmpfs - the fs is only used to provide a system-wide name (https://stackoverflow.com/a/8438910/1910191)
  socket:

configs:
  router-nginx.conf.v2:
    external: true

secrets:
  builder.crt.v2:
    external: true
  builder.key.v1:
    external: true
  redis.v1:
      external: true